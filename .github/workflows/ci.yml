name: CI

on:
  push:
  schedule:
    - cron: 0 12 1 * *

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - run: npm ci
    - run: npm run lint
    - run: npm run build

  test-install-argc:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install binary
      uses: ./
      with:
        repo: sigoden/argc
    - name: Test
      run: |
        argc --argc-version
      shell: bash

  test-install-argc-with-cache:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install binary
      uses: ./
      with:
        repo: sigoden/argc
        cache: true
    - name: Test
      run: |
        argc --argc-version
      shell: bash

  test-install-protoc-with-tag:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install binary
      uses: ./
      with:
        repo: protocolbuffers/protobuf
        tag: v26.1
        name: protoc
    - name: Test
      run: |
        protoc --version
      shell: bash

  test-install-task:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install binary
      uses: ./
      with:
        repo: go-task/task
    - name: Test
      run: |
        task --version
      shell: bash

  test-install-jq:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install binary
      uses: ./
      with:
        repo: jqlang/jq
    - name: Test
      run: |
        jq --version
      shell: bash